"""
This type stub file was generated by pyright.
"""

class StencilPass:
    def __init__(self, func_ir, typemap, calltypes, array_analysis, typingctx, targetctx, flags) -> None:
        ...
    
    def run(self): # -> None:
        """ Finds all calls to StencilFuncs in the IR and converts them to parfor.
        """
        ...
    
    def replace_return_with_setitem(self, blocks, exit_value_var, parfor_body_exit_label): # -> None:
        """
        Find return statements in the IR and replace them with a SetItem
        call of the value "returned" by the kernel into the result array.
        Returns the block labels that contained return statements.
        """
        ...
    


def get_stencil_ir(sf, typingctx, args, scope, loc, input_dict, typemap, calltypes): # -> tuple[Any, Any, dict[Any, Any]]:
    """get typed IR from stencil bytecode
    """
    ...

class DummyPipeline:
    def __init__(self, typingctx, targetctx, args, f_ir) -> None:
        ...
    



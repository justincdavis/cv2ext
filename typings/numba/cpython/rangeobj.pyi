"""
This type stub file was generated by pyright.
"""

import operator
from numba.core import types
from numba.core.imputils import iterator_impl, lower_cast
from numba.core.extending import intrinsic, overload, register_jitable

"""
Implementation of the range object for fixed-size integers.
"""
def make_range_iterator(typ): # -> Any:
    """
    Return the Structure representation of the given *typ* (an
    instance of types.RangeIteratorType).
    """
    ...

def make_range_impl(int_type, range_state_type, range_iter_type): # -> None:
    @iterator_impl(range_state_type, range_iter_type)
    class RangeIter(make_range_iterator(range_iter_type)):
        ...
    
    

range_impl_map = ...
@lower_cast(types.RangeType, types.RangeType)
def range_to_range(context, builder, fromty, toty, val): # -> Constant:
    ...

@intrinsic
def length_of_iterator(typingctx, val): # -> tuple[Signature, Callable[..., Any]]:
    """
    An implementation of len(iter) for internal use.
    Primary use is for array comprehensions (see inline_closurecall).
    """
    ...

def make_range_attr(index, attribute): # -> None:
    ...

@register_jitable
def impl_contains_helper(robj, val): # -> Literal[False]:
    ...

@overload(operator.contains)
def impl_contains(robj, val): # -> Callable[..., Any | Literal[False]] | None:
    ...


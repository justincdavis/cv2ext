"""
This type stub file was generated by pyright.
"""

from numba.core.extending import intrinsic

"""
This file provides internal compiler utilities that support certain special
operations with tuple and workarounds for limitations enforced in userland.
"""
@intrinsic
def tuple_setitem(typingctx, tup, idx, val): # -> tuple[Any, Callable[..., Any]]:
    """Return a copy of the tuple with item at *idx* replaced with *val*.

    Operation: ``out = tup[:idx] + (val,) + tup[idx + 1:]

    **Warning**

    - No boundchecking.
    - The dtype of the tuple cannot be changed.
      *val* is always cast to the existing dtype of the tuple.
    """
    ...

@intrinsic
def build_full_slice_tuple(tyctx, sz): # -> tuple[Any | Signature, Callable[..., Any]]:
    """Creates a sz-tuple of full slices."""
    ...

@intrinsic
def unpack_single_tuple(tyctx, tup): # -> tuple[Any | Signature, Callable[..., Any]]:
    """This exists to handle the situation y = (*x,), the interpreter injects a
    call to it in the case of a single value unpack. It's not possible at
    interpreting time to differentiate between an unpack on a variable sized
    container e.g. list and a fixed one, e.g. tuple. This function handles the
    situation should it arise.
    """
    ...


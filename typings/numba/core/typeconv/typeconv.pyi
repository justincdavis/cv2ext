"""
This type stub file was generated by pyright.
"""

class TypeManager:
    _conversion_codes = ...
    def __init__(self) -> None:
        ...
    
    def select_overload(self, sig, overloads, allow_unsafe, exact_match_required):
        ...
    
    def check_compatible(self, fromty, toty): # -> Literal[Conversion.exact, Conversion.promote, Conversion.safe, Conversion.unsafe] | None:
        ...
    
    def set_compatible(self, fromty, toty, by): # -> None:
        ...
    
    def set_promote(self, fromty, toty): # -> None:
        ...
    
    def set_unsafe_convert(self, fromty, toty): # -> None:
        ...
    
    def set_safe_convert(self, fromty, toty): # -> None:
        ...
    
    def get_pointer(self):
        ...
    


class TypeCastingRules:
    """
    A helper for establishing type casting rules.
    """
    def __init__(self, tm) -> None:
        ...
    
    def promote(self, a, b): # -> None:
        """
        Set `a` can promote to `b`
        """
        ...
    
    def unsafe(self, a, b): # -> None:
        """
        Set `a` can unsafe convert to `b`
        """
        ...
    
    def safe(self, a, b): # -> None:
        """
        Set `a` can safe convert to `b`
        """
        ...
    
    def promote_unsafe(self, a, b): # -> None:
        """
        Set `a` can promote to `b` and `b` can unsafe convert to `a`
        """
        ...
    
    def safe_unsafe(self, a, b): # -> None:
        """
        Set `a` can safe convert to `b` and `b` can unsafe convert to `a`
        """
        ...
    
    def unsafe_unsafe(self, a, b): # -> None:
        """
        Set `a` can unsafe convert to `b` and `b` can unsafe convert to `a`
        """
        ...
    



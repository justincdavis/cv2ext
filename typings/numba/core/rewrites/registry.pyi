"""
This type stub file was generated by pyright.
"""

class Rewrite:
    '''Defines the abstract base class for Numba rewrites.
    '''
    def __init__(self, state=...) -> None:
        '''Constructor for the Rewrite class.
        '''
        ...
    
    def match(self, func_ir, block, typemap, calltypes): # -> Literal[False]:
        '''Overload this method to check an IR block for matching terms in the
        rewrite.
        '''
        ...
    
    def apply(self):
        '''Overload this method to return a rewritten IR basic block when a
        match has been found.
        '''
        ...
    


class RewriteRegistry:
    '''Defines a registry for Numba rewrites.
    '''
    _kinds = ...
    def __init__(self) -> None:
        '''Constructor for the rewrite registry.  Initializes the rewrites
        member to an empty list.
        '''
        ...
    
    def register(self, kind): # -> Callable[..., type[Rewrite]]:
        """
        Decorator adding a subclass of Rewrite to the registry for
        the given *kind*.
        """
        ...
    
    def apply(self, kind, state): # -> None:
        '''Given a pipeline and a dictionary of basic blocks, exhaustively
        attempt to apply all registered rewrites to all basic blocks.
        '''
        ...
    


rewrite_registry = ...
register_rewrite = ...

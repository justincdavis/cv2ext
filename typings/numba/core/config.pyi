"""
This type stub file was generated by pyright.
"""

_HAVE_YAML = ...
IS_WIN32 = ...
IS_OSX = ...
MACHINE_BITS = ...
IS_32BITS = ...
PYVERSION = ...
_config_fname = ...
_old_style_deprecation_msg = ...
class _OptLevel(int):
    """This class holds the "optimisation level" set in `NUMBA_OPT`. As this env
    var can be an int or a string, but is almost always interpreted as an int,
    this class subclasses int so as to get the common behaviour but stores the
    actual value as a `_raw_value` member. The value "max" is a special case
    and the property `is_opt_max` can be queried to find if the optimisation
    level (supplied value at construction time) is "max"."""
    def __new__(cls, *args, **kwargs): # -> Self:
        ...
    
    @property
    def is_opt_max(self):
        """Returns True if the the optimisation level is "max" False
        otherwise."""
        ...
    
    def __repr__(self): # -> str:
        ...
    


class _EnvReloader:
    def __init__(self) -> None:
        ...
    
    def reset(self): # -> None:
        ...
    
    def update(self, force=...): # -> None:
        ...
    
    def validate(self): # -> None:
        ...
    
    def process_environ(self, environ): # -> None:
        ...
    


_env_reloader = ...
def reload_config(): # -> None:
    """
    Reload the configuration from environment variables, if necessary.
    """
    ...


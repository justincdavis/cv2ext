"""
This type stub file was generated by pyright.
"""

import operator
from numba.core import types
from numba.core.typing.templates import AbstractTemplate, AttributeTemplate

"""
Typing for enums.
"""
registry = ...
infer = ...
infer_global = ...
infer_getattr = ...
@infer_getattr
class EnumAttribute(AttributeTemplate):
    key = types.EnumMember
    def resolve_value(self, ty):
        ...
    


@infer_getattr
class EnumClassAttribute(AttributeTemplate):
    key = types.EnumClass
    def generic_resolve(self, ty, attr): # -> None:
        """
        Resolve attributes of an enum class as enum members.
        """
        ...
    


@infer
class EnumClassStaticGetItem(AbstractTemplate):
    key = ...
    def generic(self, args, kws): # -> Signature | None:
        ...
    


class EnumCompare(AbstractTemplate):
    def generic(self, args, kws): # -> Signature | None:
        ...
    


@infer_global(operator.eq)
class EnumEq(EnumCompare):
    ...


@infer_global(operator.ne)
class EnumNe(EnumCompare):
    ...



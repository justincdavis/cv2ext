"""
This type stub file was generated by pyright.
"""

"""
Implement transformation on Numba IR
"""
_logger = ...
def find_region_inout_vars(blocks, livemap, callfrom, returnto, body_block_ids): # -> tuple[list[Any], list[Any]]:
    """Find input and output variables to a block region.
    """
    ...

_loop_lift_info = ...
def loop_lifting(func_ir, typingctx, targetctx, flags, locals): # -> tuple[Any, list[Any]]:
    """
    Loop lifting transformation.

    Given a interpreter `func_ir` returns a 2 tuple of
    `(toplevel_interp, [loop0_interp, loop1_interp, ....])`
    """
    ...

def canonicalize_cfg_single_backedge(blocks):
    """
    Rewrite loops that have multiple backedges.
    """
    ...

def canonicalize_cfg(blocks):
    """
    Rewrite the given blocks to canonicalize the CFG.
    Returns a new dictionary of blocks.
    """
    ...

def with_lifting(func_ir, typingctx, targetctx, flags, locals): # -> tuple[Any, list[Any]]:
    """With-lifting transformation

    Rewrite the IR to extract all withs.
    Only the top-level withs are extracted.
    Returns the (the_new_ir, the_lifted_with_ir)
    """
    ...

def find_setupwiths(func_ir): # -> tuple[list[Any], Any]:
    """Find all top-level with.

    Returns a list of ranges for the with-regions.
    """
    ...

def consolidate_multi_exit_withs(withs: dict, blocks, func_ir):
    """Modify the FunctionIR to merge the exit blocks of with constructs.
    """
    ...


"""
This type stub file was generated by pyright.
"""

from functools import cached_property
from numba.core.dispatcher import _FunctionCompiler
from numba.core.compiler_lock import global_compiler_lock

"""
Implementation of compiled C callbacks (@cfunc).
"""
class _CFuncCompiler(_FunctionCompiler):
    ...


class CFunc:
    """
    A compiled C callback, as created by the @cfunc decorator.
    """
    _targetdescr = ...
    def __init__(self, pyfunc, sig, locals, options, pipeline_class=...) -> None:
        ...
    
    def enable_caching(self): # -> None:
        ...
    
    @global_compiler_lock
    def compile(self): # -> None:
        ...
    
    @property
    def native_name(self): # -> None:
        """
        The process-wide symbol the C callback is exposed as.
        """
        ...
    
    @property
    def address(self): # -> None:
        """
        The address of the C callback.
        """
        ...
    
    @cached_property
    def cffi(self): # -> CData:
        """
        A cffi function pointer representing the C callback.
        """
        ...
    
    @cached_property
    def ctypes(self): # -> _FuncPointer:
        """
        A ctypes function object representing the C callback.
        """
        ...
    
    def inspect_llvm(self):
        """
        Return the LLVM IR of the C callback definition.
        """
        ...
    
    @property
    def cache_hits(self): # -> int:
        ...
    
    def __repr__(self): # -> str:
        ...
    
    def __call__(self, *args, **kwargs):
        ...
    



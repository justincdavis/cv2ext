"""
This type stub file was generated by pyright.
"""

_env_path_tuple = ...
def get_system_ctk(*subdirs): # -> str | None:
    """Return path to system-wide cudatoolkit; or, None if it doesn't exist.
    """
    ...

def get_conda_ctk(): # -> None:
    """Return path to directory containing the shared libraries of cudatoolkit.
    """
    ...

def get_nvidia_nvvm_ctk(): # -> None:
    """Return path to directory containing the NVVM shared library.
    """
    ...

def get_nvidia_libdevice_ctk(): # -> str | None:
    """Return path to directory containing the libdevice library.
    """
    ...

def get_nvidia_cudalib_ctk(): # -> str | None:
    """Return path to directory containing the shared libraries of cudatoolkit.
    """
    ...

def get_nvidia_static_cudalib_ctk(): # -> str | None:
    """Return path to directory containing the static libraries of cudatoolkit.
    """
    ...

def get_cuda_home(*subdirs): # -> str | None:
    """Get paths of CUDA_HOME.
    If *subdirs* are the subdirectory name to be appended in the resulting
    path.
    """
    ...

def get_cuda_paths(): # -> Any | dict[str, _env_path_tuple]:
    """Returns a dictionary mapping component names to a 2-tuple
    of (source_variable, info).

    The returned dictionary will have the following keys and infos:
    - "nvvm": file_path
    - "libdevice": List[Tuple[arch, file_path]]
    - "cudalib_dir": directory_path

    Note: The result of the function is cached.
    """
    ...

def get_debian_pkg_libdevice(): # -> Literal['/usr/lib/nvidia-cuda-toolkit/libdevice'] | None:
    """
    Return the Debian NVIDIA Maintainers-packaged libdevice location, if it
    exists.
    """
    ...


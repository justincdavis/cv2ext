"""
This type stub file was generated by pyright.
"""

from contextlib import contextmanager

'''
Contains CUDA API functions
'''
def select_device(dev=...): # -> None:
    ...

def is_float16_supported(): # -> Literal[True]:
    ...

class stream:
    '''
    The stream API is supported in the simulator - however, all execution
    occurs synchronously, so synchronization requires no operation.
    '''
    @contextmanager
    def auto_synchronize(self): # -> Generator[None, Any, None]:
        ...
    
    def synchronize(self): # -> None:
        ...
    


def synchronize(): # -> None:
    ...

def close(): # -> None:
    ...

def declare_device(*args, **kwargs): # -> None:
    ...

def detect(): # -> None:
    ...

def list_devices(): # -> FakeDeviceList:
    ...

class Event:
    '''
    The simulator supports the event API, but they do not record timing info,
    and all simulation is synchronous. Execution time is not recorded.
    '''
    def record(self, stream=...): # -> None:
        ...
    
    def wait(self, stream=...): # -> None:
        ...
    
    def synchronize(self): # -> None:
        ...
    
    def elapsed_time(self, event): # -> float:
        ...
    


event = Event
def jit(func_or_sig=..., device=..., debug=..., argtypes=..., inline=..., restype=..., fastmath=..., link=..., boundscheck=..., opt=..., cache=...): # -> Callable[..., FakeCUDAKernel] | FakeCUDAKernel:
    ...

@contextmanager
def defer_cleanup(): # -> Generator[None, Any, None]:
    ...


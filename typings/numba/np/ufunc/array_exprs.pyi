"""
This type stub file was generated by pyright.
"""

import ast
from numba.core import rewrites

@rewrites.register_rewrite('after-inference')
class RewriteArrayExprs(rewrites.Rewrite):
    '''The RewriteArrayExprs class is responsible for finding array
    expressions in Numba intermediate representation code, and
    rewriting those expressions to a single operation that will expand
    into something similar to a ufunc call.
    '''
    def __init__(self, state, *args, **kws) -> None:
        ...
    
    def match(self, func_ir, block, typemap, calltypes): # -> bool:
        """
        Using typing and a basic block, search the basic block for array
        expressions.
        Return True when one or more matches were found, False otherwise.
        """
        ...
    
    def apply(self):
        '''When we've found array expressions in a basic block, rewrite that
        block, returning a new, transformed block.
        '''
        ...
    


_unaryops = ...
_binops = ...
_cmpops = ...
class _EraseInvalidLineRanges(ast.NodeTransformer):
    def generic_visit(self, node: ast.AST) -> ast.AST:
        ...
    



[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "cv2ext"
version = "0.0.12"
authors = [
  {name="Justin Davis", email="davisjustin302@gmail.com"},
]
maintainers = [
  {name="Justin Davis", email="davisjustin302@gmail.com"},
]
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "Intended Audience :: End Users/Desktop",
    "Typing :: Typed",
]
requires-python=">=3.8, <=3.13"
dependencies = [
    "opencv-contrib-python>=4.8.0",
    "numpy>=1.21.0,<2.0.0",
    "tqdm>=4.66.0",
    "typing_extensions>=4.0.0",
    "setuptools>=57.0.0",
]

[project.urls]
"Homepage" = "https://github.com/justincdavis/cv2ext"
"Bug Tracker" = "https://github.com/justincdavis/cv2ext/issues"

[project.optional-dependencies]
jit = [
    "numba>=0.55.0",
    "rocket-fft>=0.2.5",
]
ci = [
    "pyupgrade>=3.10",
    "ruff>=0.4.5",
    "mypy>=1.10.0",
    "types-setuptools>=57.0.0",
    "types-tqdm>=4.66.0",
]
test = [
    "pytest>=6.2.0",
    "hypothesis[numpy]>=6.98.0",
    "pybboxes>=0.1.6",
]
docs = [
    "sphinx>=6.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst_parser>=1.0.0",
]
dev = [
    "cv2ext[jit]",
    "cv2ext[ci]",
    "cv2ext[test]",
    "cv2ext[docs]",
    "twine>=4.0.0",
    "wheel>=0.37.0",
    "bumpver>=2023.1126",
    "pyclean>=2.7.0",
    "pyright>=1.1.348",
    "seaborn>=0.13.0",
]

[tool.bumpver]
current_version = "0.0.12"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message  = "Bump version {old_version} -> {new_version}"
commit          = true
tag             = true
push            = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"src/cv2ext/__init__.py" = ["{version}"]
"docs/conf.py" = ["{version}"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"cv2ext" = ["py.typed"]

[tool.ruff]
fix = true
show-fixes = true
target-version = "py38"
builtins = ["_"]
line-length = 88
indent-width = 4

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
select = ["ALL"]
ignore = ["PLR", "C901", "E501", "D203", "D212", "ERA"]
fixable = ["ALL"]
unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.mypy]
python_version = "3.8"
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = false
strict_equality = true
check_untyped_defs = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
disallow_any_generics = false
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_reexport = true
warn_return_any = true
plugins = "numpy.typing.mypy_plugin"

[[tool.mypy.overrides]]
module = [
    'cv2',
    'numba',
]
ignore_errors = true

[tool.pyright]
include = ["src"]
exclude = ["**/node_modules",
    "**/__pycache__",
]

ignore = ["scripts/*"]

defineConstant = {DEBUG = true}
stubPath = "typings"
reportMissingImports = true
reportMissingTypeStubs = false
  
pythonVersion = "3.8"
pythonPlatform = "Linux"

executionEnvironments = [
    { root = "src", pythonVersion = "3.8", stubPath = "typings" },
]
